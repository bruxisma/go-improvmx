name: Pull Request
on:
  pull_request:
    types: [synchronize, opened, edited]
jobs:
  skip:
    name: Check Duplicate Actions
    runs-on: ubuntu-latest
    outputs:
      should-skip: ${{steps.skip-check.outputs.should_skip}}
    steps:
      - name: Skip Duplicate Actions (Pull Request)
        uses: fkirc/skip-duplicate-actions@9d116fa7e55f295019cfab7e3ab72b478bcf7fdd # tag=v4.0.0
        id: skip-check
  spellcheck:
    name: Spellcheck
    runs-on: ubuntu-latest
    needs: skip
    if: needs.skip.outputs.should-skip != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # tag=v2
      - name: Checking Spelling
        uses: crate-ci/typos@9b70dca40cdc6916e026981d9403ecf4b09d3459 # tag=v1.11.1
        with:
          config: ${{github.workspace}}/.github/settings/typos.toml
  actions:
    name: Lint Action Workflows
    runs-on: ubuntu-latest
    needs: skip
    if: needs.skip.outputs.should-skip != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # tag=v2
      - name: Review Dog - actionlint
        uses: reviewdog/action-actionlint@f54359bbad3ecf7b660a74e04576e6fc58864861 # tag=v1
  golang:
    name: Lint Golang
    runs-on: ubuntu-latest
    needs: skip
    if: needs.skip.outputs.should-skip != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # tag=v2
      - name: Review Dog - golangci-lint
        uses: reviewdog/action-golangci-lint@70498f2d1f75a55ee9a4d719e74e21ed68aebea3 # tag=v2
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: skip
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    if: needs.skip.outputs.should-skip != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # tag=v2
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Get Go Modules Cache Location
        run: echo "::set-output name=dir::$(go env GOMODCACHE)"
        id: go-modules-cache
      - name: Get Go Build Cache Location
        run: echo "::set-output name=dir::$(go env GOCACHE)"
        id: go-build-cache
      - name: Setup Go Modules Cache
        uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77 # tag=v3
        with:
          restore-keys: ${{ runner.os }}-go-modules-
          path: ${{ steps.go-modules-cache.outputs.dir }}
          key: ${{ runner.os }}-go-modules-${{ hashFiles('**/go.sum') }}
      - name: Setup Go Build Cache
        uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77 # tag=v3
        with:
          restore-keys: ${{ runner.os }}-go-build-
          path: ${{ steps.go-build-cache.outputs.dir }}
          key: ${{ runner.os}}-go-build-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Build Library
        run: go build
      - name: Analyze Library
        run: go vet
      - name: Run Tests
        run: >-
          go test -v .
          -coverprofile coverage.out
          -cover ${{github.workspace}}
      - name: Upload Code Coverage
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378 # tag=v3
        with:
          fail_ci_if_error: true
          directory: ${{ github.workspace }}
          files: coverage.out
